global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}
  db:
    host: "localhost"
    port: 5432
    sslEnabled: false
    secrets:
      useExternal: false
      externalSecretName: ''

enabled: true
environment: "development"
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only

cloudProvider:
  dockerRegistryUrl: "my-registry-url.io"
  flavor: "openshift"
  imagePullSecretName: "acr-registry"

image:
  repository: "discrete-ingestion-db-registry"
  tag: "latest"

authentication:
  ca:
    enabled: false
    useExternal: false
    externalSecretName: ""
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""

# ====================================================================================================
# Local certificate files variables
# ====================================================================================================

local:
  certs:
    ca: "certs/ca.crt"
    ssl: "certs/openssl.cnf"
    postgres:
      ca: "certs/postgres/rootCA.crt"
      key: "certs/postgres/avi.key"
      cert: "certs/postgres/avi.crt"

postgresSecret:
  enabled: true
  userName: "postgres"
  password: "postgres"

shared:
  ssl:
    CA_DIR: /opt/certs/ca/
    KEY_DIR: /opt/certs/key/
    CERT_DIR: /opt/certs/cert/
    CA_FILE_LOCATION: /opt/certs/ca/ca.pem
    KEY_FILE_LOCATION: /opt/certs/key/key.pem
    CERT_FILE_LOCATION: /opt/certs/cert/cert.pem

env:
  port: 8080
  targetPort: 8080
  protocol: "TCP"
  openApiFilPath: "./openapi3.yaml"
  logLevel: "info"
  requestPayloadLimit: "10mb"
  tracing:
    enabled: false
    url: "http://localhost:55681/v1/trace"
  metrics:
    enabled: false
    url: "http://localhost:55681/v1/metrics"      
  db:
    database: "raster-job-manager"
    logging: false
    sslEnabled: false
  
resources:
  enabled: true
  value:
    limits:
      cpu: "100m"
      memory: "128Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"

route:
  enabled: false
  path: /

ingress:
  enabled: false
  path: /
  host: "localhost"
  cors:
    enabled: true
    origin: '*'
